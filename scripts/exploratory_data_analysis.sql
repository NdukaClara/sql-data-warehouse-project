/*
===============================================================================
-------------------EXPLORATORY DATA ANALYSIS (EDA)-----------------------------
===============================================================================
*/

-- The first step in any data project is DATA EXPLORATION---------

-- 1. Explore all objects in the Database
SELECT * from INFORMATION_SCHEMA.TABLES

-- 2. Explore all columnns in the Database
SELECT * from INFORMATION_SCHEMA.COLUMNS



-- DIMENSIONS EXPLORATION-------- Identifying unique values (or cat) in each dim,
-- recognizing how data might be grouped or segmented, which is useful for later analysis.
-- DISTINCT [Dimension]
-- Explore all countries our customers come from
select distinct country from gold.dim_customer



-- DATE EXPLORATION---------- Identify the earliest & latest dates (boundaries),
-- understand the scope of data and the timespan
-- MIN/MAX(Date Dimension)
-- Find the date of the first & last order
-- how many years of sales are available
select 
    min(order_date) as first_order_date,
    max(order_date) as last_order_date,
    DATEDIFF(year, min(order_date), max(order_date)) as order_range_years
from gold.fact_sales


-- find the youngest & oldest customers
SELECT
min(birthdate) oldest_customer,
DATEDIFF(year, min(birthdate), GETDATE()) as oldest_age,
max(birthdate) youngest_customer,
DATEDIFF(year, max(birthdate), GETDATE()) as youngest_age
from gold.dim_customer


-- MEASURES EXPLORATION--------- Calc key metrics of the business(Big Numbers)
-- Highest level of aggregation | Lowest level of detail

-- find the total sales
select sum(sales_amount) as total_sales from gold.fact_sales

-- find how many items are sold
select sum(quantity) as total_quantity from gold.fact_sales

-- find the average selling price
select avg(price) as average_price from gold.fact_sales

-- find the total number of orders
select count(order_number) as total_orders from gold.fact_sales
select count(distinct order_number) as total_orders from gold.fact_sales

-- find the total number of products
select count(product_name) as total_products from gold.dim_products
select count(distinct product_name) as total_products from gold.dim_products

-- find the total number of customers
select count(customer_key) as total_customers from gold.dim_customer

-- find the total number of customers who placed an order
select count(distinct customer_key) as total_customers_order from gold.fact_sales




---------Generate A Report That Shows All Key Metrics Of The Business---------
select 'Total Sales' as measure_name, sum(sales_amount) as measure_value from gold.fact_sales
UNION
select 'Total Quantity' as measure_name, sum(quantity) as measure_value from gold.fact_sales
UNION
select 'Average Price' as measure_name, avg(price) as measure_value from gold.fact_sales
UNION
select 'Total No Orders' as measure_name, count(distinct order_number) as measure_value from gold.fact_sales
UNION
select 'Total No Products' as measure_name, count(product_name) as measure_value from gold.dim_products
UNION
select 'Total No Customers' as measure_name, count(customer_key) as measure_value from gold.dim_customer
UNION
select 'Total No Customers With Orders' as measure_name, count(distinct customer_key) as measure_value from gold.fact_sales



-- MAGNITUDE ---------Compare the measure values by categories to understand the importance of diff categories

-- find the total customers by country
select 
country,
COUNT(customer_key) as total_customers
from gold.dim_customer
group by country
order by total_customers desc

-- find the total customers by gender
select 
gender,
COUNT(customer_key) as total_customers
from gold.dim_customer
group by gender
order by total_customers desc

-- find the total products by category
SELECT
category,
count(product_key) as total_products
from gold.dim_products
group by category
order by total_products desc

-- what is the average cost in each category?
SELECT
category,
avg(cost) as average_cost
from gold.dim_products
group by category
order by average_cost desc

-- what is the total revenue generated for each category?
select
p.category,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on f.product_key = p.product_key
GROUP by p.category
order by total_revenue desc

-- what is the total revenue generated by each customer?
select
    c.customer_key,
    c.first_name,
    c.last_name,
    sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customer c
on f.customer_key = c.customer_key
GROUP by 
    c.customer_key,
    c.first_name,
    c.last_name
order by total_revenue desc

-- what is the distribution of sold items across countries?
select
    c.country,
    sum(f.quantity) as total_sold_items
from gold.fact_sales f
left join gold.dim_customer c
on f.customer_key = c.customer_key
GROUP by 
    c.country
order by total_sold_items desc


-- RANKING ---------------- Order the dimensions of values by measure to get top N & bottom N performers

-- which 5 products generate the highest revenue?
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on f.product_key = p.product_key
GROUP by p.product_name
order by total_revenue desc

-- window fn is longer, but offers more flexibility for complex queries
SELECT *
from (
select
p.product_name,
sum(f.sales_amount) as total_revenue,
ROW_NUMBER() OVER(order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales f
left join gold.dim_products p
on f.product_key = p.product_key
GROUP by p.product_name
)t where rank_products <= 5

-- what are the 5 worst performing products in terms of sales?
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on f.product_key = p.product_key
GROUP by p.product_name
order by total_revenue asc
